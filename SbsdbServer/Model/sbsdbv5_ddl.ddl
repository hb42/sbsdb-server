-- Generated by Oracle SQL Developer Data Modeler 18.4.0.339.1532
--   at:        2019-04-07 21:09:23 CEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

-- autoincrement:
-- Tabellen anlegen mit "generated by default" + Daten, incl. index, 
-- aus v4 uebernehmen -> FK werden nicht veraendert
-- danach umstellen mit
--    ALTER TABLE xxx MODIFY id
--    GENERATED ALWAYS AS IDENTITY (START WITH LIMIT VALUE);
-- => manuelles Setzrn der ID nicht mehr moeglich, Zaehlung beginnt
--    mit max(ID) + 1
--
-- Alternative waere Umnummerierung beim Uebertragen, das wird aber
-- aufwendig. Danach muessten die Tabellen wie oben beschrieben
-- noch umgestellt werden.

DROP TABLE sbsdb_master.adresse CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.ap CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.ap_issue CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.ap_tag CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.apklasse CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.aptyp CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.aussond CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.extprog CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.hw CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.hwhistory CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.hwkonfig CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.hwtyp CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.issuetyp CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.mac CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.oe CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.program_settings CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.tagtyp CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.user_settings CASCADE CONSTRAINTS;

DROP TABLE sbsdb_master.vlan CASCADE CONSTRAINTS;

CREATE TABLE sbsdb_master.adresse (
    id        INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_adresse_id NOT NULL,
    hausnr    VARCHAR2(50),
    ort       VARCHAR2(100),
    plz       VARCHAR2(50),
    strasse   VARCHAR2(100)
)
LOGGING;

ALTER TABLE sbsdb_master.adresse ADD CONSTRAINT adresse_pk PRIMARY KEY ( id );

CREATE TABLE sbsdb_master.ap (
    id             INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_ap_id NOT NULL,
    apname         VARCHAR2(50)
        CONSTRAINT nnc_ap_apname NOT NULL,
    bemerkung      CLOB,
    bezeichnung    VARCHAR2(200)
        CONSTRAINT nnc_ap_bezeichnung NOT NULL,
    oe_id_ver_oe   INTEGER,
    oe_id          INTEGER
        CONSTRAINT nnc_ap_oe_id NOT NULL,
    apklasse_id    INTEGER
        CONSTRAINT nnc_ap_aptyp_id NOT NULL
)
LOGGING;

COMMENT ON COLUMN sbsdb_master.ap.oe_id_ver_oe IS
    'Verantwortliche OE';

CREATE INDEX sbsdb_master.ap_oe_id_idx ON
    sbsdb_master.ap (
        oe_id
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.ap_oe_id1_idx ON
    sbsdb_master.ap (
        oe_id_ver_oe
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.ap_apname_idx ON
    sbsdb_master.ap (
        apname
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.ap_aptyp_id_idx ON
    sbsdb_master.ap (
        apklasse_id
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.ap ADD CONSTRAINT ap_pk PRIMARY KEY ( id );

CREATE TABLE sbsdb_master.ap_issue (
    id            INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_ap_issue_id NOT NULL,
    close         DATE,
    open          DATE
        CONSTRAINT nnc_ap_issue_open NOT NULL,
    prio          INTEGER
        CONSTRAINT nnc_ap_issue_prio NOT NULL,
    issue         CLOB
        CONSTRAINT nnc_ap_issue_issue NOT NULL,
    ap_id         INTEGER,
    issuetyp_id   INTEGER
        CONSTRAINT nnc_ap_issue_issuetyp_id NOT NULL,
    userid        VARCHAR2(20)
        CONSTRAINT nnc_ap_issue_userid NOT NULL
)
LOGGING;

CREATE INDEX sbsdb_master.ap_issue_ap_id_idx ON
    sbsdb_master.ap_issue (
        ap_id
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.ap_issue_userid_idx ON
    sbsdb_master.ap_issue (
        userid
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.ap_issue_issuetyp_id_idx ON
    sbsdb_master.ap_issue (
        issuetyp_id
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.ap_issue_open_idx ON
    sbsdb_master.ap_issue (
        open
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.ap_issue_prio_idx ON
    sbsdb_master.ap_issue (
        prio
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.ap_issue_close_idx ON
    sbsdb_master.ap_issue (
        close
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.ap_issue ADD CONSTRAINT ap_issue_pk PRIMARY KEY ( id );

CREATE TABLE sbsdb_master.ap_tag (
    id          INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_ap_tag_id NOT NULL,
    tag_text    VARCHAR2(100)
        CONSTRAINT nnc_ap_tag_tag_text NOT NULL,
    tagtyp_id   INTEGER
        CONSTRAINT nnc_ap_tag_tagtyp_id NOT NULL,
    ap_id       INTEGER
        CONSTRAINT nnc_ap_tag_ap_id NOT NULL
)
LOGGING;

CREATE INDEX sbsdb_master.ap_tag_ap_id_idx ON
    sbsdb_master.ap_tag (
        ap_id
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.ap_tag_tagtyp_id_idx ON
    sbsdb_master.ap_tag (
        tagtyp_id
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.ap_tag_tag_text_idx ON
    sbsdb_master.ap_tag (
        tag_text
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.ap_tag ADD CONSTRAINT ap_tag_pk PRIMARY KEY ( id );

CREATE TABLE sbsdb_master.apklasse (
    id         INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_aptypv1_id NOT NULL,
    apklasse   VARCHAR2(50)
        CONSTRAINT nnc_aptypv1_aptyp NOT NULL,
    flag       INTEGER,
    aptyp_id   INTEGER NOT NULL
)
LOGGING;

CREATE INDEX sbsdb_master.apklasse_aptyp_id_idx ON
    sbsdb_master.apklasse (
        aptyp_id
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.apklasse ADD CONSTRAINT apklasse_pk PRIMARY KEY ( id );

CREATE TABLE sbsdb_master.aptyp (
    id      INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_aptyp_id NOT NULL,
    aptyp   VARCHAR2(50)
        CONSTRAINT nnc_aptyp_aptyp NOT NULL,
    flag    INTEGER
)
LOGGING;

ALTER TABLE sbsdb_master.aptyp ADD CONSTRAINT aptyp_pk PRIMARY KEY ( id );

ALTER TABLE sbsdb_master.aptyp ADD CONSTRAINT aptyp_aptyp_un UNIQUE ( aptyp );

CREATE TABLE sbsdb_master.aussond (
    id            INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_aussond_id NOT NULL,
    ansch_dat     DATE,
    ansch_wert    NUMBER,
    auss_dat      DATE,
    auss_grund    VARCHAR2(50),
    inv_nr        VARCHAR2(50),
    hwkonfig_id   INTEGER
        CONSTRAINT nnc_aussond_hwkonfig_id NOT NULL,
    mac           VARCHAR2(50),
    smbiosguid    VARCHAR2(50),
    ser_nr        VARCHAR2(50)
        CONSTRAINT nnc_aussond_ser_nr NOT NULL,
    wartung_bem   VARCHAR2(200),
    wartung_fa    VARCHAR2(50),
    rewe          DATE,
    bemerkung     CLOB
)
LOGGING;

CREATE INDEX sbsdb_master.aussond_ser_nr_idx ON
    sbsdb_master.aussond (
        ser_nr
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.aussond_auss_dat_idx ON
    sbsdb_master.aussond (
        auss_dat
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.aussond ADD CONSTRAINT aussond_pk PRIMARY KEY ( id );

CREATE TABLE sbsdb_master.extprog (
    id             INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_extprog_id NOT NULL,
    extprog        VARCHAR2(255)
        CONSTRAINT nnc_extprog_extprog NOT NULL,
    extprog_name   VARCHAR2(50)
        CONSTRAINT nnc_extprog_extprog_name NOT NULL,
    extprog_par    VARCHAR2(255),
    flag           INTEGER,
    apklasse_id    INTEGER
        CONSTRAINT nnc_extprog_aptyp_id NOT NULL
)
LOGGING;

ALTER TABLE sbsdb_master.extprog ADD CONSTRAINT extprog_pk PRIMARY KEY ( id );

CREATE TABLE sbsdb_master.hw (
    id            INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_hw_id NOT NULL,
    ansch_dat     DATE,
    ansch_wert    NUMBER,
    inv_nr        VARCHAR2(50),
    smbiosguid    VARCHAR2(50),
    pri           NUMBER(1)
        CONSTRAINT nnc_hw_pri NOT NULL,
    ser_nr        VARCHAR2(50)
        CONSTRAINT nnc_hw_ser_nr NOT NULL,
    wartung_bem   VARCHAR2(200),
    wartung_fa    VARCHAR2(50),
    ap_id         INTEGER,
    hwkonfig_id   INTEGER,
    bemerkung     CLOB
)
LOGGING;

CREATE INDEX sbsdb_master.hw_ap_id_idx ON
    sbsdb_master.hw (
        ap_id
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.hw_hwkonfig_id_idx ON
    sbsdb_master.hw (
        hwkonfig_id
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.hw_ser_nr_idx ON
    sbsdb_master.hw (
        ser_nr
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.hw ADD CONSTRAINT hw_pk PRIMARY KEY ( id );

ALTER TABLE sbsdb_master.hw ADD CONSTRAINT hw_smbiosguid_un UNIQUE ( smbiosguid );

CREATE TABLE sbsdb_master.hwhistory (
    id               INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_hwhistory_id NOT NULL,
    ap_id            INTEGER
        CONSTRAINT nnc_hwhistory_ap_id NOT NULL,
    betriebsstelle   VARCHAR2(50),
    ap_bezeichnung   VARCHAR2(55),
    direction        VARCHAR2(2)
        CONSTRAINT nnc_hwhistory_direction NOT NULL,
    ap_name          VARCHAR2(50),
    shiftdate        TIMESTAMP DEFAULT localtimestamp(6)
        CONSTRAINT nnc_hwhistory_shiftdate NOT NULL,
    hw_id            INTEGER
)
LOGGING;

CREATE INDEX sbsdb_master.hwhistory_hw_id_idx ON
    sbsdb_master.hwhistory (
        hw_id
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.hwhistory_shiftdate_idx ON
    sbsdb_master.hwhistory (
        shiftdate
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.hwhistory_ap_name_idx ON
    sbsdb_master.hwhistory (
        ap_name
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.hwhistory_direction_idx ON
    sbsdb_master.hwhistory (
        direction
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.hwhistory ADD CONSTRAINT hwhistory_pk PRIMARY KEY ( id );

CREATE TABLE sbsdb_master.hwkonfig (
    id            INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_hwkonfig_id NOT NULL,
    bezeichnung   VARCHAR2(50)
        CONSTRAINT nnc_hwkonfig_bezeichnung NOT NULL,
    hd            VARCHAR2(50),
    hersteller    VARCHAR2(50)
        CONSTRAINT nnc_hwkonfig_hersteller NOT NULL,
    prozessor     VARCHAR2(50),
    ram           VARCHAR2(50),
    sonst         CLOB,
    video         VARCHAR2(50),
    hwtyp_id      INTEGER
)
LOGGING;

CREATE INDEX sbsdb_master.hwkonfig_hwtyp_id_idx ON
    sbsdb_master.hwkonfig (
        hwtyp_id
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.hwkonfig_hersteller_idx ON
    sbsdb_master.hwkonfig (
        hersteller
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.hwkonfig_bezeichnung_idx ON
    sbsdb_master.hwkonfig (
        bezeichnung
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.hwkonfig ADD CONSTRAINT hwkonfig_pk PRIMARY KEY ( id );

CREATE TABLE sbsdb_master.hwtyp (
    id         INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_hwtyp_id NOT NULL,
    hwtyp      VARCHAR2(50)
        CONSTRAINT nnc_hwtyp_hwtyp NOT NULL,
    aptyp_id   INTEGER,
    flag       INTEGER
)
LOGGING;

CREATE INDEX sbsdb_master.hwtyp_aptyp_id_idx ON
    sbsdb_master.hwtyp (
        aptyp_id
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.hwtyp_flag_idx ON
    sbsdb_master.hwtyp (
        flag
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.hwtyp ADD CONSTRAINT hwtyp_pk PRIMARY KEY ( id );

ALTER TABLE sbsdb_master.hwtyp ADD CONSTRAINT hwtyp_hwtyp_un UNIQUE ( hwtyp );

CREATE TABLE sbsdb_master.issuetyp (
    id         INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_issuetyp_id NOT NULL,
    flag       INTEGER,
    issuetyp   VARCHAR2(100)
        CONSTRAINT nnc_issuetyp_issuetyp NOT NULL
)
LOGGING;

CREATE INDEX sbsdb_master.issuetyp_issuetyp_idx ON
    sbsdb_master.issuetyp (
        issuetyp
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.issuetyp_flag_idx ON
    sbsdb_master.issuetyp (
        flag
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.issuetyp ADD CONSTRAINT issuetyp_pk PRIMARY KEY ( id );

CREATE TABLE sbsdb_master.mac (
    id             INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_mac_id NOT NULL,
    hw_id          INTEGER
        CONSTRAINT nnc_mac_hw_id NOT NULL,
    mac            VARCHAR2(12)
        CONSTRAINT nnc_mac_mac NOT NULL,
    ip             INTEGER,
    vlan_vlan_id   INTEGER
        CONSTRAINT nnc_mac_vlan_vlan_id NOT NULL
)
LOGGING;

CREATE INDEX sbsdb_master.mac_mac_idx ON
    sbsdb_master.mac (
        mac
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.mac ADD CONSTRAINT mac_pk PRIMARY KEY ( id );

ALTER TABLE sbsdb_master.mac ADD CONSTRAINT mac_mac_un UNIQUE ( mac );

CREATE TABLE sbsdb_master.oe (
    id               INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_oe_id NOT NULL,
    ap               INTEGER,
    betriebsstelle   VARCHAR2(100)
        CONSTRAINT nnc_oe_betriebsstelle NOT NULL,
    bst              INTEGER
        CONSTRAINT nnc_oe_bst NOT NULL,
    fax              VARCHAR2(50),
    oeff             CLOB,
    tel              VARCHAR2(50),
    oe_id            INTEGER
        CONSTRAINT nnc_oe_oe_id NOT NULL,
    adresse_id       INTEGER
)
LOGGING;

CREATE INDEX sbsdb_master.oe_adresse_id_idx ON
    sbsdb_master.oe (
        adresse_id
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.oe_oe_id_idx ON
    sbsdb_master.oe (
        oe_id
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.oe_bst_idx ON
    sbsdb_master.oe (
        bst
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.oe_betriebsstelle_idx ON
    sbsdb_master.oe (
        betriebsstelle
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.oe ADD CONSTRAINT oe_pk PRIMARY KEY ( id );

ALTER TABLE sbsdb_master.oe ADD CONSTRAINT oe_betriebsstelle_un UNIQUE ( betriebsstelle );

CREATE TABLE sbsdb_master.program_settings (
    id      INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_prefsv1_id NOT NULL,
    key     VARCHAR2(100)
        CONSTRAINT nnc_prefsv1_preference NOT NULL,
    value   VARCHAR2(2000)
)
LOGGING;

CREATE INDEX sbsdb_master.program_settings_key_idx ON
    sbsdb_master.program_settings (
        key
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.program_settings ADD CONSTRAINT program_settings_pk PRIMARY KEY ( id );

ALTER TABLE sbsdb_master.program_settings ADD CONSTRAINT program_settings_key_un UNIQUE ( key );

CREATE TABLE sbsdb_master.tagtyp (
    id            INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_tagtyp_id NOT NULL,
    tag_typ       VARCHAR2(50)
        CONSTRAINT nnc_tagtyp_tag_typ NOT NULL,
    flag          INTEGER,
    param         VARCHAR2(200),
    apklasse_id   INTEGER NOT NULL
)
LOGGING;

CREATE INDEX sbsdb_master.tagtyp_aptyp_id_idx ON
    sbsdb_master.tagtyp (
        apklasse_id
    ASC )
        LOGGING;

CREATE INDEX sbsdb_master.tagtyp_tag_typ_idx ON
    sbsdb_master.tagtyp (
        tag_typ
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.tagtyp ADD CONSTRAINT tagtyp_pk PRIMARY KEY ( id );

CREATE TABLE sbsdb_master.user_settings (
    id         INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_prefs_id NOT NULL,
    userid     VARCHAR2(20) NOT NULL,
    settings   CLOB
)
LOGGING;

CREATE INDEX sbsdb_master.user_settings_userid_idx ON
    sbsdb_master.user_settings (
        userid
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.user_settings ADD CONSTRAINT user_settings_pk PRIMARY KEY ( id );

ALTER TABLE sbsdb_master.user_settings ADD CONSTRAINT user_settings_userid_un UNIQUE ( userid );

CREATE TABLE sbsdb_master.vlan (
    id        INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
        CONSTRAINT nnc_vlan_vlan_id NOT NULL,
    netmask   INTEGER
        CONSTRAINT nnc_vlan_netmask NOT NULL,
    vlan      VARCHAR2(100)
        CONSTRAINT nnc_vlan_vlan_name NOT NULL,
    ip        INTEGER
        CONSTRAINT nnc_vlan_ip NOT NULL
)
LOGGING;

CREATE INDEX sbsdb_master.vlan_ip_idx ON
    sbsdb_master.vlan (
        ip
    ASC )
        LOGGING;

ALTER TABLE sbsdb_master.vlan ADD CONSTRAINT vlan_pk PRIMARY KEY ( id );

ALTER TABLE sbsdb_master.vlan ADD CONSTRAINT vlan_vlan_un UNIQUE ( vlan );

ALTER TABLE sbsdb_master.vlan ADD CONSTRAINT vlan_ip_un UNIQUE ( ip );

ALTER TABLE sbsdb_master.ap
    ADD CONSTRAINT ap_apklasse_fk FOREIGN KEY ( apklasse_id )
        REFERENCES sbsdb_master.apklasse ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.ap_issue
    ADD CONSTRAINT ap_issue_ap_fk FOREIGN KEY ( ap_id )
        REFERENCES sbsdb_master.ap ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.ap_issue
    ADD CONSTRAINT ap_issue_issuetyp_fk FOREIGN KEY ( issuetyp_id )
        REFERENCES sbsdb_master.issuetyp ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.ap
    ADD CONSTRAINT ap_oe_fk FOREIGN KEY ( oe_id )
        REFERENCES sbsdb_master.oe ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.ap
    ADD CONSTRAINT ap_oe_fk_ver_oe FOREIGN KEY ( oe_id_ver_oe )
        REFERENCES sbsdb_master.oe ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.ap_tag
    ADD CONSTRAINT ap_tag_ap_fk FOREIGN KEY ( ap_id )
        REFERENCES sbsdb_master.ap ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.ap_tag
    ADD CONSTRAINT ap_tag_tagtyp_fk FOREIGN KEY ( tagtyp_id )
        REFERENCES sbsdb_master.tagtyp ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.apklasse
    ADD CONSTRAINT apklasse_aptyp_fk FOREIGN KEY ( aptyp_id )
        REFERENCES sbsdb_master.aptyp ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.aussond
    ADD CONSTRAINT aussond_hwkonfig_fk FOREIGN KEY ( hwkonfig_id )
        REFERENCES sbsdb_master.hwkonfig ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.extprog
    ADD CONSTRAINT extprog_apklasse_fk FOREIGN KEY ( apklasse_id )
        REFERENCES sbsdb_master.apklasse ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.hw
    ADD CONSTRAINT hw_ap_fk FOREIGN KEY ( ap_id )
        REFERENCES sbsdb_master.ap ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.hw
    ADD CONSTRAINT hw_hwkonfig_fk FOREIGN KEY ( hwkonfig_id )
        REFERENCES sbsdb_master.hwkonfig ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.hwhistory
    ADD CONSTRAINT hwhistory_hw_fk FOREIGN KEY ( hw_id )
        REFERENCES sbsdb_master.hw ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.hwkonfig
    ADD CONSTRAINT hwkonfig_hwtyp_fk FOREIGN KEY ( hwtyp_id )
        REFERENCES sbsdb_master.hwtyp ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.hwtyp
    ADD CONSTRAINT hwtyp_aptyp_fk FOREIGN KEY ( aptyp_id )
        REFERENCES sbsdb_master.aptyp ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.mac
    ADD CONSTRAINT mac_hw_fk FOREIGN KEY ( hw_id )
        REFERENCES sbsdb_master.hw ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.mac
    ADD CONSTRAINT mac_vlan_fk FOREIGN KEY ( vlan_vlan_id )
        REFERENCES sbsdb_master.vlan ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.oe
    ADD CONSTRAINT oe_adresse_fk FOREIGN KEY ( adresse_id )
        REFERENCES sbsdb_master.adresse ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.oe
    ADD CONSTRAINT oe_oe_fk FOREIGN KEY ( oe_id )
        REFERENCES sbsdb_master.oe ( id )
    NOT DEFERRABLE;

ALTER TABLE sbsdb_master.tagtyp
    ADD CONSTRAINT tagtyp_apklasse_fk FOREIGN KEY ( apklasse_id )
        REFERENCES sbsdb_master.apklasse ( id )
    NOT DEFERRABLE;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            19
-- CREATE INDEX                            40
-- ALTER TABLE                             48
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
